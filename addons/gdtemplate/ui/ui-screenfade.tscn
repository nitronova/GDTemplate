[gd_scene load_steps=2 format=3 uid="uid://urpngc5n5a1l"]

[sub_resource type="GDScript" id="GDScript_unkys"]
resource_name = "ui-screenfade"
script/source = "extends CanvasLayer

signal fade_complete

enum { IDLE, BLACK, OUT, IN }

@onready var nUIColorRect: ColorRect = get_node( \"ColorRect\" )

var state: int = IDLE : set = set_state
var percent: float = 0 : set = set_percent


func _on_tween_finished() -> void:
	match state:
		IN:
			state = IDLE
		OUT:
			state = BLACK
	visible = false
	emit_signal( \"fade_complete\" )


func set_percent( value: float ) -> void:
	percent = clamp( value, 0.0, 1.0 )
	nUIColorRect.modulate.a = percent


func set_state( value: int )->void:
	state = value
	var tween = get_tree().create_tween()
	match state:
		OUT:
			#	Fading to black
			tween.tween_property( self, \"percent\", 0.0, 0.5 )
			tween.play()
		IN:
			#	Fading from black
			tween.tween_property( self, \"percent\", 1.0, 0.5 )
			tween.play()
	visible = true
	await tween.finished
	tween.kill()
	self._on_tween_finished()


func _ready() -> void:
	nUIColorRect.modulate.a = percent


func _exit_tree() -> void:
	destroy()


func destroy() -> void:
	pass
"

[node name="ScreenFade" type="CanvasLayer"]
layer = 120
visible = false
script = SubResource("GDScript_unkys")

[node name="ColorRect" type="ColorRect" parent="."]
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
color = Color(0, 0, 0, 1)
